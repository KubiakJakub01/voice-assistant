[project]
name = "voice-assistant"
version = "0.1.0"
description = "Voice assistant"
readme = "../README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi[standard]>=0.115.11",
    "numpy>=2.2.3",
    "faiss-cpu>=1.11.0",
    "langchain>=0.3.25",
    "langchain-community>=0.3.24",
    "langchain-openai>=0.3.18",
    "openai-agents[voice]>=0.0.16",
    "openai>=1.68.2",
    "pre-commit>=4.2.0",
    "pydantic>=2.11.5",
    "python-dotenv>=1.1.0",
    "uvicorn>=0.34.0",
    "sqlalchemy>=2.0.0",
    "unstructured>=0.17.2",
    "markdown>=3.8",
    "coloredlogs>=15.0.1",
    "dateparser>=1.2.1",
]

[dependency-groups]
dev = [
    "pre-commit>=3.5.0",
    "ruff>=0.11.11",
    "pylint>=3.3.7",
    "mypy>=1.15.0",
    "ipykernel>=6.29.5",
    "types-dateparser>=1.2.0.20250516",
    "types-pyyaml>=6.0.12.20250516",
]

[tool.pylint]
max-line-length = 100
disable = ["missing-docstring",
            "invalid-name",
            "too-many-instance-attributes",
            "too-many-arguments",
            "method-hidden",
            "too-many-locals",
            "consider-using-from-import",
            "relative-beyond-top-level",
            "too-many-ancestors",
            "too-many-arguments",
            "too-many-positional-arguments",
            "duplicate-code",
            "wrong-import-order",
            "too-few-public-methods",
            "broad-exception-caught"
            ]
fail-under = 10.0
generated-members=["numpy.*","torch.*"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]


# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = ["B008"] # Ignore B008: Do not perform function calls in argument defaults.

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
